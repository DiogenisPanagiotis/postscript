{"version":3,"sources":["data.js","components/Media.js","components/Preview.js","components/Create.js","components/Campaigns.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["data","Media","props","uploadedImage","React","useRef","imageUploader","className","type","accept","onChange","e","file","target","files","reader","FileReader","current","onload","src","result","fetchMedia","getAttribute","readAsDataURL","ref","style","display","onClick","click","renderTagButton","renderTags","alt","media","Preview","sendCampaign","campaigns","toggleCreate","campaignID","campaignName","message","saveCampaign","id","length","name","text","status","draftCampaign","state","this","segment","slice","Component","Create","handleCampignNameChange","setState","value","handleSegmentChange","handleTagChange","tag","handleMessageChange","onClickAddTag","showTagDropdown","insertTag","togglePreview","showPreview","renderSelectSegments","segments","map","key","subscribers_count","idx","renderContent","placeholder","Campaigns","renderCampaigns","editCampaign","campaign","stats","toLowerCase","sent","clicked","bind","renderView","create","Main","campaignToEdit","renderCreateButton","focus","newCampaign","updatedCampaigns","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.281a323c.chunk.js","sourcesContent":["var data = {\n    \"campaigns\": [\n      {\n        \"id\": 1,\n        \"name\": \"Fourth of July Promo\",\n        \"text\": \"Hi {first_name}, it's {shop_name}! This 4th of July celebrate with our Freedom Sale!\",\n        \"status\": \"Sent\",\n        \"segment_id\": 1,\n        \"media\": \"https://images.unsplash.com/photo-1556804335-2fa563e93aae\",\n        \"stats\": {\n          \"sent\": 6506,\n          \"clicked\": 6137\n        }\n      },\n      {\n        \"id\": 2,\n        \"name\": \"Labor Day Sale\",\n        \"text\": \"Hey {first_name}, it's {shop_name}! We have a HUGE sale on Labor Day, get up to 30% off with LABOR30. {shop_link}\",\n        \"status\": \"Sent\",\n        \"segment_id\": 1,\n        \"media\": null,\n        \"stats\": {\n          \"sent\": 7228,\n          \"clicked\": 6883\n        }\n      },\n      {\n        \"id\": 3,\n        \"name\": \"Cotton Candy Palette Announcement\",\n        \"text\": \"Hi {first_name}! Here at {shop_name} we just got our NEW Cotton Candy Palette! {shop_link}\",\n        \"status\": \"Sent\",\n        \"segment_id\": 2,\n        \"media\": \"https://images.unsplash.com/photo-1544220828-1becb7f7b284\",\n        \"stats\": {\n          \"sent\": 7246,\n          \"clicked\": 7080\n        }\n      },\n      {\n        \"id\": 4,\n        \"name\": \"Fall Decor Updates\",\n        \"text\": \"Hey {first_name}! Back at {shop_name} we've gotten a WILD amount of home updates you NEED this Fall. 👀 {shop_link}\",\n        \"status\": \"Preview\",\n        \"segment_id\": 3,\n        \"media\": \"https://images.unsplash.com/photo-1568485248685-019a98426c14\",\n        \"stats\": null\n      },\n      {\n        \"id\": 5,\n        \"name\": \"Great Halloween Sale\",\n        \"text\": \"It's the Great Halloween Sale, {first_name}! Things are getting pretty spooky here at {shop_name}. Take up to 20% off with SCARE20\",\n        \"status\": \"Preview\",\n        \"segment_id\": 1,\n        \"media\": \"https://images.unsplash.com/photo-1537800534001-f3e01aa1c34c\",\n        \"stats\": null\n      }\n    ],\n    \"segments\": [\n      { \"id\": 1, \"name\": \"All Subscribers\", \"subscribers_count\": 8920 },\n      { \"id\": 2, \"name\": \"Beauty Purchases\", \"subscribers_count\": 7108 },\n      { \"id\": 3, \"name\": \"Decor Purchases\", \"subscribers_count\": 1204 }\n    ]\n  };\n\n  export default data;","import React from 'react';\nimport '../App.css'\n\nconst Media = (props) => {\n    const uploadedImage = React.useRef(null);\n    const imageUploader = React.useRef(null);\n  \n    const handleImageUpload = e => {\n        const [file] = e.target.files;\n        if (file) {\n            const reader = new FileReader();\n            const { current } = uploadedImage;\n            current.file = file;\n            reader.onload = e => {\n                current.src = e.target.result;\n                props.fetchMedia(uploadedImage.current.getAttribute('src'));\n            };\n            reader.readAsDataURL(file);\n        }\n    };\n\n    return (\n        <div className=\"media-container\">\n            <input\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={handleImageUpload}\n                ref={imageUploader}\n                style={{ display: \"none\" }}\n            />\n            <div className=\"media-uploader\" onClick={() => imageUploader.current.click()}>Add Photo or GIF</div>\n            {props.renderTagButton()}\n            {props.renderTags()}\n            <div className=\"media-preview-container\">\n                <img className=\"media-preview\" alt=\"\" ref={uploadedImage} src={props.media ? props.media : 'http://placehold.jp/ffffff/000000/150x150.png'} />\n                <span>Media Preview</span>\n            </div>\n        </div>\n    );\n}\n\nexport default Media;","import React, { Component } from 'react';\nimport '../App.css'\n\nclass Preview extends Component {\n    constructor() {\n        super();\n        this.state = {\n            current: null,\n        };\n    }\n\n    sendCampaign = () => {\n        const { campaigns, toggleCreate, campaignID } = this.props;\n        const { \n            campaignName,\n            media,\n            message,\n        } = this.props.data;\n\n        this.props.saveCampaign({\n            id: campaignID ? campaignID : campaigns.length,\n            name: campaignName || 'Untitled Campaign',\n            text: message,\n            status: \"Sent\",\n            media: media,\n        }, campaignID ? campaignID + 1 : campaigns.length + 1);\n\n        toggleCreate();\n    }\n\n    draftCampaign = () => {\n        const { campaigns, toggleCreate, campaignID } = this.props;\n        const { \n            campaignName,\n            media,\n            message,\n        } = this.props.data;\n\n        toggleCreate();\n\n        this.props.saveCampaign({\n            id: campaignID ? campaignID : campaigns.length,\n            name: campaignName || 'Untitled Campaign',\n            text: message,\n            status: \"Preview\",\n            media: media,\n        }, campaignID ? campaignID + 1 : campaigns.length + 1); \n    }\n\n    render() {\n        const { \n            campaignName,\n            segment,\n            message,\n            media,\n        } = this.props.data;\n\n        return (\n            <div className=\"preview\">\n                <div className=\"preview-container\">\n                    <div className=\"preview-campaign-tag\">Campaign: </div>\n                    <div className=\"preview-campaign\">{campaignName}</div>\n                </div>\n                <div className=\"preview-container\">\n                    <div className=\"preview-segment-tag\">Segment: </div>\n                    <div className=\"preview-segment\">{segment}</div>\n                </div>\n                <div className=\"preview-container\">\n                    <div className=\"preview-message-tag\">Message: </div>\n                    <div className=\"preview-message\">{message}</div>\n                </div>\n                <div className=\"preview-container\">\n                    <div className=\"preview-media-tag\">Media: </div>\n                    <div className=\"preview-media\">{`${media ? `${media.slice(0, 39)}...` : ''}`}</div>\n                </div>\n                <div className=\"cancel-button\" onClick={this.draftCampaign}>Back to Campaigns (Save Draft)</div>\n                <div className=\"save-button\" onClick={this.sendCampaign}>Send Campaign!</div>\n            </div>\n        );\n    }\n}\n\nexport default Preview;","import React, { Component } from 'react';\nimport data from '../data';\nimport Media from './Media';\nimport Preview from './Preview';\nimport '../App.css'\n\nclass Create extends Component {\n    constructor(props) {\n        super(props);\n\n        const { campaigns, campaignID } = this.props;\n        \n        this.state = {\n            campaignName: campaignID ? campaigns[campaignID].name : '',\n            segment: 'All Subscribers',\n            message: campaignID ? campaigns[campaignID].text : '',\n            media: campaignID ? campaigns[campaignID].media : null,\n            tag: '{shop_link}',\n            showTagDropdown: false,\n            showPreview: false,\n        };\n    }\n\n    handleCampignNameChange = (e) => {\n        this.setState({\n            campaignName: e.target.value,\n        });\n    }\n\n    handleSegmentChange = (e) => {\n        this.setState({\n            segment: e.target.value,\n        });\n    }\n\n    handleTagChange = (e) => {\n        this.setState({\n            tag: e.target.value,\n        });\n    }\n\n    handleMessageChange = (e) =>{\n        this.setState({\n            message: e.target.value,\n        });\n    }\n\n    onClickAddTag = () => {\n        this.setState({\n            showTagDropdown: !this.state.showTagDropdown,\n        });\n    }\n\n    insertTag = () => {\n        const { message, tag } = this.state;\n        this.setState({\n            message: `${message} ${tag}`\n        });\n    }\n\n    togglePreview = () => {\n        this.setState({\n            showPreview: !this.state.showPreview,\n        });\n    }\n\n    fetchMedia = (media) => {\n        this.setState({\n            media: media\n        });\n    }\n\n    renderSelectSegments = () => {\n        const segments = data.segments;\n        return (\n            <div>\n                <select name=\"\" onChange={this.handleSegmentChange} value={this.state.segment}>\n                    {segments.map((segment) => {\n                        return <option key={segment.id} value={segment.name}>{`${segment.name} (${segment.subscribers_count})`}</option>\n                    })}\n                </select>\n            </div>\n        )\n    }\n\n    renderTags = () => {\n        const tags = [\"{shop_link}\", \"{first_name}\", \"{shop_name}\"];\n        if (this.state.showTagDropdown) {\n            return (\n                <div className=\"tag-dropdown\">\n                    {this.state.showTagDropdown ? <select className=\"tag-dropdown-select\" onChange={this.handleTagChange} value={this.state.tag}>\n                        {tags.map((tag, idx) => {\n                            return <option key={idx} value={tag}>{tag}</option>\n                        })}\n                    </select> : null}\n                    <div className=\"insert-tag-button\" onClick={this.insertTag}>Insert Tag</div>\n                </div>\n            );\n        }\n    }\n\n    renderTagButton = () => {\n        return (\n            <div className=\"add-tag-button\" onClick={this.onClickAddTag}>Add Tag</div>\n        );\n    }\n\n    renderContent = () => {\n        const { message, showPreview } = this.state;\n        const { campaigns, saveCampaign, toggleCreate, campaignID } = this.props;\n        if (showPreview) {\n            return (\n                <Preview \n                    toggleCreate={toggleCreate} \n                    togglePreview={this.togglePreview} \n                    data={this.state} \n                    saveCampaign={saveCampaign}\n                    campaigns={campaigns}\n                    campaignID={campaignID}\n                />\n            );\n        }\n        return (\n            <div>\n                <div className=\"create-campaign-tag\">Campaign Name</div>\n                <input \n                    placeholder=\"Campaign Name\"\n                    className=\"create-campaign-input\" \n                    onChange={this.handleCampignNameChange}\n                    value={this.state.campaignName}\n                />\n                <div className=\"create-segment-tag\">Segment Name</div>\n                {this.renderSelectSegments()}\n                <div className=\"create-message-tag\">Message</div>\n                <Media \n                    renderTags={this.renderTags}\n                    renderTagButton={this.renderTagButton}\n                    fetchMedia={this.fetchMedia}\n                    media={campaignID ? campaigns[campaignID].media : null}\n                />\n                <input\n                    placeholder=\"{shop_name}: Hi {first_name}! This is a sample text message.\"\n                    className=\"create-message-input\"\n                    onChange={this.handleMessageChange}\n                    value={message}\n                />\n                <div className=\"cancel-button\" onClick={toggleCreate}>Cancel</div>\n                <div className=\"save-button\" onClick={this.togglePreview}>Save & Continue to Preview</div>\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"create\">{this.renderContent()}</div>\n        );\n    }\n}\n\nexport default Create;","import React, { Component } from 'react';\nimport Create from './Create';\nimport '../App.css'\n\nclass Campaigns extends Component {\n\n    renderCampaigns = (status) => {\n        const { campaigns, editCampaign } = this.props;\n        return (\n            <div>\n                {campaigns.map((campaign, idx) => {\n                    if (campaign.status === status) {\n                        const stats = campaign.stats ? campaign.stats : null;\n                        return (\n                            <div className=\"campaign-group\" key={idx}>\n                                <div className=\"campaign-title\">{`${campaign.name}`}</div>\n                                <div className={`campaign-status-${campaign.status.toLowerCase()}`}>{`${campaign.status}`}</div>\n                                {campaign.status === 'Sent' ? <div className=\"campaign-sent\">{`${stats ? stats.sent : 0} (Sent)`}</div> : null}\n                                {campaign.status === 'Sent' ? <div className=\"campaign-clicked\">{`${stats ? stats.clicked : 0} (Clicked)`}</div> : null}\n                                {campaign.status === 'Preview' ? <div className=\"campaign-edit\" onClick={editCampaign.bind(this, idx)}>Edit</div> : null}\n                            </div>\n                        );\n                    }\n                })}\n            </div>\n        )\n    }\n\n    renderView = () => {\n        const { create, campaigns, saveCampaign, toggleCreate, campaignID } = this.props;\n        if (create) {\n            return (\n                <Create \n                    toggleCreate={toggleCreate}\n                    saveCampaign={saveCampaign}\n                    campaigns={campaigns}\n                    campaignID={campaignID}\n                />\n            )\n        }\n        return (\n            <div className=\"inventory\">\n                <div className=\"sub-title\">Open Campaigns</div>\n                {this.renderCampaigns(\"Preview\")}\n                <div className=\"sub-title\">Sent Campaigns</div>\n                {this.renderCampaigns(\"Sent\")}\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"campaigns\">\n                {this.renderView()}\n            </div>\n        );\n    }\n}\n\nexport default Campaigns;","import React, { Component } from 'react';\nimport Campaigns from './Campaigns';\nimport data from '../data';\nimport '../App.css'\n\nclass Main extends Component {\n    constructor() {\n        super();\n        this.state = {\n            focus: 'Campaigns',\n            create: false,\n            campaigns: data.campaigns,\n            campaignToEdit: null,\n        };\n    }\n\n    toggleCreate = () => {\n        const { campaignToEdit, create } = this.state;\n        if (campaignToEdit) {\n            this.setState({\n                campaignToEdit: null,\n            });\n        }\n        this.setState({\n            create: !create,\n        });\n    }\n\n    editCampaign = (campaignID) => {\n        this.setState({\n            campaignToEdit: campaignID,\n        });\n        this.toggleCreate();\n    }\n\n    renderCreateButton = () => {\n        const { create, focus } = this.state;\n        if (!create) {\n            return (\n                <div className=\"create-button\" onClick={this.toggleCreate}>Create {focus.slice(0, -1)}</div>\n            );\n        }\n    }\n\n    saveCampaign = (newCampaign, id) => {\n            const { campaigns } = this.state;\n            const updatedCampaigns = [...campaigns];\n            updatedCampaigns[newCampaign.id] = newCampaign;\n            if (id) {\n                updatedCampaigns[newCampaign.id].id = id;\n            }\n            this.setState({\n                campaigns: updatedCampaigns,\n            });\n    }\n\n    render() {\n        const { focus, create, campaigns, campaignToEdit } = this.state;\n        return (\n            <div className=\"main\">\n                <div className=\"category\">{create ? `${focus} > Create ${focus}` : focus}</div>\n                {this.renderCreateButton()}\n                <hr />\n                <Campaigns \n                    create={create} \n                    toggleCreate={this.toggleCreate}\n                    campaigns={campaigns}\n                    saveCampaign={this.saveCampaign}\n                    editCampaign={this.editCampaign}\n                    campaignID={campaignToEdit}\n                />\n            </div>\n        );\n    }\n}\n\nexport default Main;","import React from 'react'\nimport Main from './components/Main';\nimport './App.css';\n\nconst App = () => {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<nav className=\"nav\">\n\t\t\t\t<div className=\"logo\">Postscript</div>\n\t\t\t</nav>\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"side-nav\">\n\t\t\t\t\t<ul className=\"side-nav-list\">\n\t\t\t\t\t\t<li id=\"Dashboard\">Dashboard</li>\n\t\t\t\t\t\t<li id=\"Campaigns\"> Campaigns</li>\n\t\t\t\t\t\t<li id=\"Segments\">Segments</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t\t<Main />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}